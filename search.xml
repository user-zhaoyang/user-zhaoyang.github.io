<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>数组和对象浅拷贝</title>
      <link href="/2018/09/08/%E6%95%B0%E7%BB%84%E5%92%8C%E5%AF%B9%E8%B1%A1%E6%B5%85%E6%8B%B7%E8%B4%9D/"/>
      <url>/2018/09/08/%E6%95%B0%E7%BB%84%E5%92%8C%E5%AF%B9%E8%B1%A1%E6%B5%85%E6%8B%B7%E8%B4%9D/</url>
      <content type="html"><![CDATA[<h3 id="浅拷贝"><a href="#浅拷贝" class="headerlink" title="浅拷贝"></a>浅拷贝</h3><blockquote><p>晚上十点左右接到电话面试，问对象的拷贝。</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 以下都是浅拷贝，应该还有很多方法吧。。。。</span></span><br><span class="line"><span class="keyword">let</span> a = &#123;</span><br><span class="line">    name: <span class="string">'小李'</span>,</span><br><span class="line">    other: &#123;</span><br><span class="line">        age: <span class="number">33</span>,</span><br><span class="line">        like: <span class="string">'apple'</span></span><br><span class="line">    &#125;,</span><br><span class="line">    sayName() &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="keyword">this</span>.name)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// a为外部对象</span></span><br><span class="line"><span class="keyword">let</span> b = [a, <span class="number">12</span>];</span><br><span class="line"><span class="comment">//拷贝b的方法</span></span><br><span class="line"><span class="keyword">let</span> c = [...b]</span><br><span class="line"><span class="keyword">let</span> d = <span class="built_in">Array</span>.from(b)</span><br><span class="line"><span class="keyword">let</span> e = [].concat(b);</span><br><span class="line"><span class="keyword">let</span> f = b.concat();</span><br><span class="line"><span class="keyword">let</span> g = <span class="built_in">JSON</span>.parse(<span class="built_in">JSON</span>.stringify(b))</span><br><span class="line"><span class="keyword">let</span> h = <span class="built_in">Object</span>.assign([], b);</span><br><span class="line"><span class="keyword">let</span> i = b.slice(<span class="number">0</span>)</span><br><span class="line"><span class="keyword">let</span> [...j] = b;</span><br><span class="line"><span class="keyword">let</span> k = <span class="built_in">Array</span>.from(<span class="keyword">new</span> <span class="built_in">Set</span>([...b]))</span><br><span class="line">a.name = <span class="string">'小王'</span></span><br><span class="line">a.other.like = <span class="string">'Samsung'</span></span><br><span class="line"><span class="comment">// ------------------------------------------------</span></span><br><span class="line"><span class="comment">// console.log(c)</span></span><br><span class="line"><span class="comment">// [&#123;"name":"小王","other":&#123;"age":33,"like":"Samsung"&#125;&#125;]</span></span><br><span class="line"><span class="comment">// c[0].name = 'c';</span></span><br><span class="line"><span class="comment">// console.log(c[0].name,b[0].name)</span></span><br><span class="line"><span class="comment">// c c</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// c[1] = 'c';</span></span><br><span class="line"><span class="comment">// console.log(c[1], b[1])</span></span><br><span class="line"><span class="comment">// c 12</span></span><br><span class="line"><span class="comment">// ------------------------------------------------</span></span><br><span class="line"><span class="comment">// console.log(d)</span></span><br><span class="line"><span class="comment">// [&#123;"name":"小王","other":&#123;"age":33,"like":"Samsung"&#125;&#125;]</span></span><br><span class="line"><span class="comment">// d[0].name = 'd'</span></span><br><span class="line"><span class="comment">// console.log(d[0].name,b[0].name)</span></span><br><span class="line"><span class="comment">// d d</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// d[1] = 'd';</span></span><br><span class="line"><span class="comment">// console.log(d[1], b[1])</span></span><br><span class="line"><span class="comment">// d 12</span></span><br><span class="line"><span class="comment">// ------------------------------------------------</span></span><br><span class="line"><span class="comment">// console.log(e)</span></span><br><span class="line"><span class="comment">// [&#123;"name":"小王","other":&#123;"age":33,"like":"Samsung"&#125;&#125;]</span></span><br><span class="line"><span class="comment">// e[0].name = 'e'</span></span><br><span class="line"><span class="comment">// console.log(e[0].name,b[0].name)</span></span><br><span class="line"><span class="comment">// e e</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// e[1] = 'e';</span></span><br><span class="line"><span class="comment">// console.log(e[1], b[1])</span></span><br><span class="line"><span class="comment">// e 12</span></span><br><span class="line"><span class="comment">// ------------------------------------------------</span></span><br><span class="line"><span class="comment">// console.log(f)</span></span><br><span class="line"><span class="comment">// [&#123;"name":"小王","other":&#123;"age":33,"like":"Samsung"&#125;&#125;]</span></span><br><span class="line"><span class="comment">// f[0].name = 'f'</span></span><br><span class="line"><span class="comment">// console.log(f[0].name, b[0].name)</span></span><br><span class="line"><span class="comment">// f f</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// f[1] = 'f';</span></span><br><span class="line"><span class="comment">// console.log(f[1], b[1])</span></span><br><span class="line"><span class="comment">// f 12</span></span><br><span class="line"><span class="comment">// ------------------------------------------------</span></span><br><span class="line"><span class="comment">// console.log(g)</span></span><br><span class="line"><span class="comment">// [&#123;"name":"小李","other":&#123;"age":33,"like":"apple"&#125;&#125;]</span></span><br><span class="line"><span class="comment">// g[0].name = 'g'</span></span><br><span class="line"><span class="comment">// console.log(g[0].name, b[0].name)</span></span><br><span class="line"><span class="comment">// g 小王</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// g[1] = 'g';</span></span><br><span class="line"><span class="comment">// console.log(g[1], b[1])</span></span><br><span class="line"><span class="comment">// g 12</span></span><br><span class="line"><span class="comment">// ------------------------------------------------</span></span><br><span class="line"><span class="comment">// console.log(h)</span></span><br><span class="line"><span class="comment">// [&#123;"name":"小王","other":&#123;"age":33,"like":"Samsung"&#125;&#125;]</span></span><br><span class="line"><span class="comment">// h[0].name = 'h'</span></span><br><span class="line"><span class="comment">// console.log(h[0].name, b[0].name)</span></span><br><span class="line"><span class="comment">// h h</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// h[1] = 'h';</span></span><br><span class="line"><span class="comment">// console.log(h[1], b[1])</span></span><br><span class="line"><span class="comment">// h 12</span></span><br><span class="line"><span class="comment">// ------------------------------------------------</span></span><br><span class="line"><span class="comment">// console.log(i)</span></span><br><span class="line"><span class="comment">// [&#123;"name":"小王","other":&#123;"age":33,"like":"Samsung"&#125;&#125;]</span></span><br><span class="line"><span class="comment">// i[0].name = 'i'</span></span><br><span class="line"><span class="comment">// console.log(i[0].name, b[0].name)</span></span><br><span class="line"><span class="comment">// i i</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// i[1] = 'i';</span></span><br><span class="line"><span class="comment">// console.log(i[1], b[1])</span></span><br><span class="line"><span class="comment">// i 12</span></span><br><span class="line"><span class="comment">// ------------------------------------------------</span></span><br><span class="line"><span class="comment">// console.log(j)</span></span><br><span class="line"><span class="comment">// [&#123;"name":"小王","other":&#123;"age":33,"like":"Samsung"&#125;&#125;]</span></span><br><span class="line"><span class="comment">// j[0].name = 'j'</span></span><br><span class="line"><span class="comment">// console.log(j[0].name, b[0].name)</span></span><br><span class="line"><span class="comment">// j j</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// j[1] = 'j';</span></span><br><span class="line"><span class="comment">// console.log(j[1], b[1])</span></span><br><span class="line"><span class="comment">// j 12</span></span><br><span class="line"><span class="comment">// ------------------------------------------------</span></span><br><span class="line"><span class="comment">// console.log(k)</span></span><br><span class="line"><span class="comment">// [&#123;"name":"小王","other":&#123;"age":33,"like":"Samsung"&#125;&#125;]</span></span><br><span class="line"><span class="comment">// k[0].name = 'k'</span></span><br><span class="line"><span class="comment">// console.log(k[0].name, b[0].name)</span></span><br><span class="line"><span class="comment">// k k</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// k[1] = 'k';</span></span><br><span class="line"><span class="comment">// console.log(k[1], b[1])</span></span><br><span class="line"><span class="comment">// k 12</span></span><br><span class="line"><span class="comment">// ------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// =================================================</span></span><br><span class="line"><span class="keyword">let</span> user = &#123;</span><br><span class="line">    name: <span class="string">'小李'</span>, <span class="attr">other</span>: &#123;</span><br><span class="line">        age: <span class="number">33</span>,</span><br><span class="line">        like: <span class="string">'apple'</span>,</span><br><span class="line">        sayName() &#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="keyword">this</span>.name)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> school = &#123;</span><br><span class="line">    user,</span><br><span class="line">    c: &#123;</span><br><span class="line">        name: <span class="string">'老王'</span>, <span class="attr">other</span>: &#123;</span><br><span class="line">            age: <span class="number">13</span>,</span><br><span class="line">            like: <span class="string">'Sony'</span>,</span><br><span class="line">            sayName() &#123;</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="keyword">this</span>.name)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> s1 = <span class="built_in">JSON</span>.parse(<span class="built_in">JSON</span>.stringify(school))</span><br><span class="line">user.name = <span class="string">'张飞'</span></span><br><span class="line">user.other.like = <span class="string">'貂蝉'</span></span><br><span class="line"><span class="comment">// ------------------------------------------------</span></span><br><span class="line"><span class="comment">// console.log(s1)</span></span><br><span class="line"><span class="comment">// &#123;"a":&#123;"name":"小王","other":&#123;"age":33,"like":"Samsung"&#125;&#125;,"b":&#123;"name":"老王","other":&#123;"age":13,"like":"Sony"&#125;&#125;&#125;</span></span><br><span class="line"><span class="comment">// s1.user.name = 's1'</span></span><br><span class="line"><span class="comment">// console.log(s1, school)</span></span><br><span class="line"><span class="comment">// &#123;"user":&#123;"name":"s1","other":&#123;"age":33,"like":"apple"&#125;&#125;,"c":&#123;"name":"老王","other":&#123;"age":13,"like":"Sony"&#125;&#125;&#125;</span></span><br><span class="line"><span class="comment">// &#123;"user":&#123;"name":"张飞","other":&#123;"age":33,"like":"貂蝉"&#125;&#125;,"c":&#123;"name":"老王","other":&#123;"age":13,"like":"Sony"&#125;&#125;&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// s1.c.name = 's1'</span></span><br><span class="line"><span class="comment">// console.log(s1, school)</span></span><br><span class="line"><span class="comment">// &#123;"user":&#123;"name":"s1","other":&#123;"age":33,"like":"apple"&#125;&#125;,"c":&#123;"name":"s1","other":&#123;"age":13,"like":"Sony"&#125;&#125;&#125;</span></span><br><span class="line"><span class="comment">// &#123;"user":&#123;"name":"张飞","other":&#123;"age":33,"like":"貂蝉"&#125;&#125;,"c":&#123;"name":"老王","other":&#123;"age":13,"like":"Sony"&#125;&#125;&#125;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> 代码 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>ES6学习小记</title>
      <link href="/2018/09/02/ES6%E5%AD%A6%E4%B9%A0%E5%B0%8F%E8%AE%B0/"/>
      <url>/2018/09/02/ES6%E5%AD%A6%E4%B9%A0%E5%B0%8F%E8%AE%B0/</url>
      <content type="html"><![CDATA[<h3 id="ES6-介绍"><a href="#ES6-介绍" class="headerlink" title="ES6 介绍"></a>ES6 介绍</h3><blockquote><p>ECMAScript 6.0（以下简称 ES6）是 JavaScript 语言的下一代标准，已经在 2015 年 6 月正式发布了。它的目标，是使得 JavaScript 语言可以用来编写复杂的大型应用程序，成为企业级开发语言。<br>ECMAScript 和 JavaScript 的关系</p><p>一个常见的问题是，ECMAScript 和 JavaScript 到底是什么关系？<br>要讲清楚这个问题，需要回顾历史。1996 年 11 月，JavaScript 的创造者 Netscape 公司，决定将 JavaScript 提交给标准化组织 ECMA，希望这种语言能够成为国际标准。次年，ECMA 发布 262 号标准文件（ECMA-262）的第一版，规定了浏览器脚本语言的标准，并将这种语言称为 ECMAScript，这个版本就是 1.0 版。<br>该标准从一开始就是针对 JavaScript 语言制定的，但是之所以不叫 JavaScript，有两个原因。一是商标，Java 是 Sun 公司的商标，根据授权协议，只有 Netscape 公司可以合法地使用 JavaScript 这个名字，且 JavaScript 本身也已经被 Netscape 公司注册为商标。二是想体现这门语言的制定者是 ECMA，不是 Netscape，这样有利于保证这门语言的开放性和中立性。<br>因此，ECMAScript 和 JavaScript 的关系是，前者是后者的规格，后者是前者的一种实现（另外的 ECMAScript 方言还有 Jscript 和 ActionScript）。日常场合，这两个词是可以互换的。</p><p>ECMAScript 2015（简称 ES2015）这个词，也是经常可以看到的。它与 ES6 是什么关系呢？<br>2011 年，ECMAScript 5.1 版发布后，就开始制定 6.0 版了。因此，ES6 这个词的原意，就是指 JavaScript 语言的下一个版本。<br>但是，因为这个版本引入的语法功能太多，而且制定过程当中，还有很多组织和个人不断提交新功能。事情很快就变得清楚了，不可能在一个版本里面包括所有将要引入的功能。常规的做法是先发布 6.0 版，过一段时间再发 6.1 版，然后是 6.2 版、6.3 版等等。<br>但是，标准的制定者不想这样做。他们想让标准的升级成为常规流程：任何人在任何时候，都可以向标准委员会提交新语法的提案，然后标准委员会每个月开一次会，评估这些提案是否可以接受，需要哪些改进。如果经过多次会议以后，一个提案足够成熟了，就可以正式进入标准了。这就是说，标准的版本升级成为了一个不断滚动的流程，每个月都会有变动。<br>标准委员会最终决定，标准在每年的 6 月份正式发布一次，作为当年的正式版本。接下来的时间，就在这个版本的基础上做改动，直到下一年的 6 月份，草案就自然变成了新一年的版本。这样一来，就不需要以前的版本号了，只要用年份标记就可以了。<br>ES6 的第一个版本，就这样在 2015 年 6 月发布了，正式名称就是《ECMAScript 2015 标准》（简称 ES2015）。2016 年 6 月，小幅修订的《ECMAScript 2016 标准》（简称 ES2016）如期发布，这个版本可以看作是 ES6.1 版，因为两者的差异非常小（只新增了数组实例的includes方法和指数运算符），基本上是同一个标准。根据计划，2017 年 6 月发布 ES2017 标准。<br>因此，ES6 既是一个历史名词，也是一个泛指，含义是 5.1 版以后的 JavaScript 的下一代标准，涵盖了 ES2015、ES2016、ES2017 等等，而 ES2015 则是正式名称，特指该年发布的正式版本的语言标准。本书中提到 ES6 的地方，一般是指 ES2015 标准，但有时也是泛指“下一代 JavaScript 语言”。</p><p>引自 — <a href="http://es6.ruanyifeng.com/" title="ECMAScript 6 入门" target="_blank" rel="noopener"> ECMAScript 6 入门</a> -&gt; <a href="http://es6.ruanyifeng.com/#docs/intro" target="_blank" rel="noopener">ECMAScript 6 简介</a><br><a href="http://www.ruanyifeng.com/" title="作者：阮一峰" target="_blank" rel="noopener">作者：阮一峰</a><br><a href="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank" rel="noopener">非商用许可证</a><br><a href="http://www.ruanyifeng.com/blog/2008/04/creative_commons_licenses.html" target="_blank" rel="noopener">谈谈创作共用许可证（Creative Commons licenses）</a></p></blockquote><h3 id="笔记正文"><a href="#笔记正文" class="headerlink" title="笔记正文"></a>笔记正文</h3><p><strong><em>观 腾讯课堂  <a href="https://ke.qq.com/course/274758" target="_blank" rel="noopener">牧码人ES6</a>  有感而记</em></strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// =========================================================================================</span></span><br><span class="line"><span class="comment">//解构赋值</span></span><br><span class="line"><span class="comment">//普通解构赋值</span></span><br><span class="line"><span class="comment">// let [a,b,c] = [1,2,3]</span></span><br><span class="line"><span class="comment">// console.log(a,b,c)</span></span><br><span class="line"><span class="comment">// ------------------------------------------------</span></span><br><span class="line"><span class="comment">// 对象解构赋值 : 为别名 ES6中可以对对象进行默认值使用 = </span></span><br><span class="line"><span class="comment">// let &#123;name,age,like:lk='暂无'&#125; = &#123;name:'name',age:'19',like:'fish'&#125;</span></span><br><span class="line"><span class="comment">// console.log(name,age,lk)</span></span><br><span class="line"><span class="comment">// let showName = (&#123;name,age='未知'&#125;=&#123;&#125;)=&gt;&#123;</span></span><br><span class="line"><span class="comment">//     console.log(name,age)</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"><span class="comment">// 调用方式，三种</span></span><br><span class="line"><span class="comment">// showName(&#123;name:'tom',age:26&#125;) // tom 26</span></span><br><span class="line"><span class="comment">// showName(&#123;name:'tom'&#125;) //tom 未知</span></span><br><span class="line"><span class="comment">// showName() //undefined "未知"</span></span><br><span class="line"><span class="comment">// =========================================================================================</span></span><br><span class="line"><span class="comment">// 新增字符串方法</span></span><br><span class="line"><span class="comment">// let a = 'asdf';</span></span><br><span class="line"><span class="comment">// //判断是否包含某字符串类似ES5中的indexOF</span></span><br><span class="line"><span class="comment">// a.includes()</span></span><br><span class="line"><span class="comment">// //参数是字符串，判断是否为这个字符串开始</span></span><br><span class="line"><span class="comment">// a.startsWith()</span></span><br><span class="line"><span class="comment">// //参数是字符串，判断是否为这个字符串结束</span></span><br><span class="line"><span class="comment">// a.endsWith()</span></span><br><span class="line"><span class="comment">// //将一个字符串重复多少次，参数为number表示重复次数</span></span><br><span class="line"><span class="comment">// a.repeat()</span></span><br><span class="line"><span class="comment">// //在字符串前面填充字符串，两个参数，第一个字符串总长度，第二个要填充的字符</span></span><br><span class="line"><span class="comment">// a.padStart()</span></span><br><span class="line"><span class="comment">// //在字符串后面填充字符串，两个参数，第一个字符串总长度，第二个要填充的字符</span></span><br><span class="line"><span class="comment">// a.padEnd()</span></span><br><span class="line"><span class="comment">// =========================================================================================</span></span><br><span class="line"><span class="comment">// 函数新增</span></span><br><span class="line"><span class="comment">// 默认参数 使用 = </span></span><br><span class="line"><span class="comment">// let showName = (name='没传进来')=&gt;&#123;</span></span><br><span class="line"><span class="comment">//     console.log(name)</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"><span class="comment">// showName() //输出默认值 “没传进来”</span></span><br><span class="line"><span class="comment">// =========================================================================================</span></span><br><span class="line"><span class="comment">// function showName(name)&#123;</span></span><br><span class="line"><span class="comment">//     // let name = '1' // 报错</span></span><br><span class="line"><span class="comment">//     // const name = '1' // 报错</span></span><br><span class="line"><span class="comment">//     // ======分割======</span></span><br><span class="line"><span class="comment">//     // console.log(name) // asdf </span></span><br><span class="line"><span class="comment">//     // var name = '1' //正常</span></span><br><span class="line"><span class="comment">//     // console.log(name) // 1</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"><span class="comment">// showName('asdf')</span></span><br><span class="line"><span class="comment">// =========================================================================================</span></span><br><span class="line"><span class="comment">// 扩展运算符、复位（rest）运算符  三个点 ...</span></span><br><span class="line"><span class="comment">// 展开数组</span></span><br><span class="line"><span class="comment">// let arr = ['aaa','bbb','ccc']</span></span><br><span class="line"><span class="comment">// console.log(arr) // ['aaa','bbb','ccc']</span></span><br><span class="line"><span class="comment">// console.log(...arr) // aaa bbb ccc</span></span><br><span class="line"><span class="comment">// ------------------------------------------------</span></span><br><span class="line"><span class="comment">// function showNum()&#123;</span></span><br><span class="line"><span class="comment">//     // ES5 中用arguments接受所有的值如果上面不定义变量接收，不定义变了接收的原因是因为参数数量不可控</span></span><br><span class="line"><span class="comment">//     // arguments</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"><span class="comment">// ------------------------------------------------</span></span><br><span class="line"><span class="comment">// function showNum(...all)&#123;</span></span><br><span class="line"><span class="comment">//     // ES6 中用 ... 接受所有的值,需要起一个变量名</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"><span class="comment">// function showNum(a,b,...all)&#123;</span></span><br><span class="line"><span class="comment">//     // 剩余参数</span></span><br><span class="line"><span class="comment">//     // console.log(a,b,all) //1 2 [4, 5, 6, 7, 8]</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"><span class="comment">// showNum(1,2,4,5,6,7,8)</span></span><br><span class="line"><span class="comment">// ------------------------------------------------</span></span><br><span class="line"><span class="comment">// let arr = [1,2,3,4,5,6]</span></span><br><span class="line"><span class="comment">// // ES5 复制</span></span><br><span class="line"><span class="comment">// let arr1 = Array.from(arr)</span></span><br><span class="line"><span class="comment">// // ES6 </span></span><br><span class="line"><span class="comment">// let arr2 = [...arr]</span></span><br><span class="line"><span class="comment">// ------------------------------------------------</span></span><br><span class="line"><span class="comment">// 箭头函数</span></span><br><span class="line"><span class="comment">// 直接返回</span></span><br><span class="line"><span class="comment">// let showName =(a,b)=&gt; `$&#123;a&#125;$&#123;b&#125;`;</span></span><br><span class="line"><span class="comment">// console.log(showName('樱桃','小丸子'))</span></span><br><span class="line"><span class="comment">// ------------------------------------------------</span></span><br><span class="line"><span class="comment">// this穿透 箭头函数里没有arguments对象可以使用    ...</span></span><br><span class="line"><span class="comment">// let json = &#123;</span></span><br><span class="line"><span class="comment">//     id:1,</span></span><br><span class="line"><span class="comment">//     showId()&#123;</span></span><br><span class="line"><span class="comment">//         // setTimeout(function()&#123;</span></span><br><span class="line"><span class="comment">//         //     console.log(this.is) // 报错 此时this指向window</span></span><br><span class="line"><span class="comment">//         // &#125;)</span></span><br><span class="line"><span class="comment">//         // setTimeout(()=&gt;&#123;</span></span><br><span class="line"><span class="comment">//         //     console.log(this.is) // 不报错 此时this指向当前对象</span></span><br><span class="line"><span class="comment">//         // &#125;)</span></span><br><span class="line"><span class="comment">//     &#125;</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"><span class="comment">// json.showId()</span></span><br><span class="line"><span class="comment">// ------------------------------------------------</span></span><br><span class="line"><span class="comment">// ES2017 传方法参数最后可以带 , 逗号</span></span><br><span class="line"><span class="comment">// =========================================================================================</span></span><br><span class="line"><span class="comment">// 数组的一些方法</span></span><br><span class="line"><span class="comment">//let arr = [1,2,3,4,5]</span></span><br><span class="line"><span class="comment">// forEach 可以取代 for(var i=0;i&lt;arr.length;i++)</span></span><br><span class="line"><span class="comment">// forEach(回掉方法,this指向(如果回掉方法为箭头函数此参数无效))</span></span><br><span class="line"><span class="comment">// /--其他--/矫正this指向可以使用bind</span></span><br><span class="line"><span class="comment">// arr.forEach((val,index,arr)=&gt;&#123;</span></span><br><span class="line"><span class="comment">//     console.log(val,index,arr)</span></span><br><span class="line"><span class="comment">//     // 结果如下</span></span><br><span class="line"><span class="comment">//     // 1 0  [1, 2, 3, 4, 5]</span></span><br><span class="line"><span class="comment">//     // 2 1  [1, 2, 3, 4, 5]</span></span><br><span class="line"><span class="comment">//     // 3 2  [1, 2, 3, 4, 5]</span></span><br><span class="line"><span class="comment">//     // 4 3  [1, 2, 3, 4, 5]</span></span><br><span class="line"><span class="comment">//     // 5 4  [1, 2, 3, 4, 5]</span></span><br><span class="line"><span class="comment">// &#125;)</span></span><br><span class="line"><span class="comment">// ------------------------------------------------</span></span><br><span class="line"><span class="comment">// let arr = [&#123;name:'李童总',age:19&#125;,&#123;name:'张飞',age:11&#125;,&#123;name:'关羽',age:30&#125;]</span></span><br><span class="line"><span class="comment">// map 是有返回值的 forEach 没有 重新整理数据结构</span></span><br><span class="line"><span class="comment">// 如果仅做循环，map内不做处理数据也没有返回值使用forEach</span></span><br><span class="line"><span class="comment">// 下面代码将 原数组对象中&#123;name:'xxx',age:'xx'&#125;修改为&#123;n:'xxx',a:'xx'&#125;并且将原来的age+20</span></span><br><span class="line"><span class="comment">// let newArr = arr.map((val,index,arr)=&gt;&#123;</span></span><br><span class="line"><span class="comment">//     return &#123;</span></span><br><span class="line"><span class="comment">//         n:val.name,</span></span><br><span class="line"><span class="comment">//         a:val.age+20</span></span><br><span class="line"><span class="comment">//     &#125;</span></span><br><span class="line"><span class="comment">// &#125;)</span></span><br><span class="line"><span class="comment">// console.log(newArr)</span></span><br><span class="line"><span class="comment">// 输出如下</span></span><br><span class="line"><span class="comment">//[&#123;"n":"李童总","a":39&#125;,&#123;"n":"张飞","a":31&#125;,&#123;"n":"关羽","a":50&#125;]</span></span><br><span class="line"><span class="comment">// ------------------------------------------------</span></span><br><span class="line"><span class="comment">// filter 过滤 下面是对年龄小于20岁的人进行删除</span></span><br><span class="line"><span class="comment">// let arr = [&#123;name:'李童总',age:19&#125;,&#123;name:'张飞',age:11&#125;,&#123;name:'关羽',age:30&#125;]</span></span><br><span class="line"><span class="comment">// let newArr = arr.filter((val,index,arr)=&gt;&#123;</span></span><br><span class="line"><span class="comment">//     return val.age &gt; 20</span></span><br><span class="line"><span class="comment">// &#125;)</span></span><br><span class="line"><span class="comment">// console.log(newArr)</span></span><br><span class="line"><span class="comment">// 输出如下</span></span><br><span class="line"><span class="comment">//[&#123;"name":"关羽","age":30&#125;]</span></span><br><span class="line"><span class="comment">// ------------------------------------------------</span></span><br><span class="line"><span class="comment">// 查找 如果有一个和条件相同的返回true否则返回false</span></span><br><span class="line"><span class="comment">// let arr = [&#123;name:'李童总',age:19&#125;,&#123;name:'张飞',age:11&#125;,&#123;name:'关羽',age:30&#125;]</span></span><br><span class="line"><span class="comment">// let newArr = arr.some((val,index,arr)=&gt;&#123;</span></span><br><span class="line"><span class="comment">//     return val.name === '你我他'</span></span><br><span class="line"><span class="comment">// &#125;)</span></span><br><span class="line"><span class="comment">// console.log(newArr)</span></span><br><span class="line"><span class="comment">// 输出如下 因为没有一个对象的name是你我他</span></span><br><span class="line"><span class="comment">// false</span></span><br><span class="line"><span class="comment">// ------------------------------------------------</span></span><br><span class="line"><span class="comment">// 查找 全部和条件相同的返回true否则返回false</span></span><br><span class="line"><span class="comment">// let arr = [&#123;name:'李童总',age:19&#125;,&#123;name:'张飞',age:11&#125;,&#123;name:'关羽',age:30&#125;]</span></span><br><span class="line"><span class="comment">// let newArr = arr.every((val,index,arr)=&gt;&#123;</span></span><br><span class="line"><span class="comment">//     return val.name === '李童总'</span></span><br><span class="line"><span class="comment">// &#125;)</span></span><br><span class="line"><span class="comment">// console.log(newArr)</span></span><br><span class="line"><span class="comment">// 输出如下 因为并不是所有对象的name都是 李童总</span></span><br><span class="line"><span class="comment">// false</span></span><br><span class="line"><span class="comment">// ------------------------------------------------</span></span><br><span class="line"><span class="comment">// let arr = [1,2,3,4,5,6,7,8,9,10]</span></span><br><span class="line"><span class="comment">// let newArr = arr.reduce((prev,cur,index,arr)=&gt;&#123;</span></span><br><span class="line"><span class="comment">//     //我注意到如果这里不return那么prev是有问题的</span></span><br><span class="line"><span class="comment">//     return prev+cur;</span></span><br><span class="line"><span class="comment">// &#125;)</span></span><br><span class="line"><span class="comment">// console.log(newArr)</span></span><br><span class="line"><span class="comment">// 输出结果 55</span></span><br><span class="line"><span class="comment">// ------------------------------------------------</span></span><br><span class="line"><span class="comment">// 幂运算符</span></span><br><span class="line"><span class="comment">// console.log(2 ** 3)</span></span><br><span class="line"><span class="comment">// 输出结果 8</span></span><br><span class="line"><span class="comment">// ------------------------------------------------</span></span><br><span class="line"><span class="comment">// let arr = [3,2]</span></span><br><span class="line"><span class="comment">// let newArr = arr.reduceRight((prev,cur,index,arr)=&gt;&#123;</span></span><br><span class="line"><span class="comment">//     // reduceRight位置调换</span></span><br><span class="line"><span class="comment">//     return prev ** cur</span></span><br><span class="line"><span class="comment">// &#125;)</span></span><br><span class="line"><span class="comment">// console.log(newArr)</span></span><br><span class="line"><span class="comment">// 输出结果 8</span></span><br><span class="line"><span class="comment">// ------------------------------------------------</span></span><br><span class="line"><span class="comment">// arr.keys() // 数组的下标</span></span><br><span class="line"><span class="comment">// for(let i of arr.keys())&#123;</span></span><br><span class="line"><span class="comment">//     //输出的为数组的下标</span></span><br><span class="line"><span class="comment">//     console.log(i)</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"><span class="comment">// ------------------------------------------------</span></span><br><span class="line"><span class="comment">// arr.entries() //数组的某项</span></span><br><span class="line"><span class="comment">// for(let i of arr.entries())&#123;</span></span><br><span class="line"><span class="comment">//     //输出的为数组,包含下标和值</span></span><br><span class="line"><span class="comment">//     console.log(i)</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"><span class="comment">// // 使用解构赋值</span></span><br><span class="line"><span class="comment">// for(let [key,val] of arr.entries())&#123;</span></span><br><span class="line"><span class="comment">//     console.log(key,val)</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"><span class="comment">// ------------------------------------------------</span></span><br><span class="line"><span class="comment">// Array.from(这里可以放数组，类数组，可以转换为数组,具备length的属性) //es6</span></span><br><span class="line"><span class="comment">// console.log([].slice.call(arr)) //es5</span></span><br><span class="line"><span class="comment">// console.log(Array.from('String'))</span></span><br><span class="line"><span class="comment">// console.log(Array.from(&#123;0:'1',1:'2',2:'3',length:'3'&#125;))</span></span><br><span class="line"><span class="comment">// ------------------------------------------------</span></span><br><span class="line"><span class="comment">// Array.of(将一组值转为数组)</span></span><br><span class="line"><span class="comment">// console.log(Array.of('1','2','3'))</span></span><br><span class="line"><span class="comment">// let Arrof = (...agr)=&gt;&#123;</span></span><br><span class="line"><span class="comment">//     return agr;</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"><span class="comment">// ------------------------------------------------</span></span><br><span class="line"><span class="comment">// find 找出第一个符合条件的项</span></span><br><span class="line"><span class="comment">// let newArr = arr.find((item,index,arr)=&gt;&#123;</span></span><br><span class="line"><span class="comment">//     return item.age &gt; 20</span></span><br><span class="line"><span class="comment">// &#125;)</span></span><br><span class="line"><span class="comment">// console.log(newArr)</span></span><br><span class="line"><span class="comment">// ------------------------------------------------</span></span><br><span class="line"><span class="comment">// findIndex 发现被找到对象的位置</span></span><br><span class="line"><span class="comment">// let newArr = arr.findIndex((item,index,arr)=&gt;&#123;</span></span><br><span class="line"><span class="comment">//     return item.age &gt; 20</span></span><br><span class="line"><span class="comment">// &#125;)</span></span><br><span class="line"><span class="comment">// console.log(newArr)</span></span><br><span class="line"><span class="comment">// ------------------------------------------------</span></span><br><span class="line"><span class="comment">// fill (填充的内容，起始index，终点index)</span></span><br><span class="line"><span class="comment">// let arr = new Array(100);</span></span><br><span class="line"><span class="comment">// arr.fill('填充物')</span></span><br><span class="line"><span class="comment">// console.log(arr)</span></span><br><span class="line"><span class="comment">// ------------------------------------------------</span></span><br><span class="line"><span class="comment">// includes 数组内是否包含某值</span></span><br><span class="line"><span class="comment">// let arr = ['top','left','right','bottom']</span></span><br><span class="line"><span class="comment">// console.log(arr.includes('right'))</span></span><br><span class="line"><span class="comment">// =========================================================================================</span></span><br><span class="line"><span class="comment">// 对象</span></span><br><span class="line"><span class="comment">// 1、简洁语法</span></span><br><span class="line"><span class="comment">// let name = 'tom'</span></span><br><span class="line"><span class="comment">// let age = '25'</span></span><br><span class="line"><span class="comment">// let json = &#123;name,age,showName()&#123;return this.name&#125;&#125;</span></span><br><span class="line"><span class="comment">// console.log(json) //&#123;name: "tom", age: "25"&#125;</span></span><br><span class="line"><span class="comment">// ------------------------------------------------</span></span><br><span class="line"><span class="comment">// Object.is() 判断两个对象是否相等</span></span><br><span class="line"><span class="comment">// Object.assign() 合并对象 复制对象 后面对象覆盖前面</span></span><br><span class="line"><span class="comment">// Object.keys() 对象的key</span></span><br><span class="line"><span class="comment">// Object.values() 对象的val</span></span><br><span class="line"><span class="comment">// Object.entries() 对象单个项</span></span><br><span class="line"><span class="comment">// ------------------------------------------------</span></span><br><span class="line"><span class="comment">// 对象的扩展运算符 ...</span></span><br><span class="line"><span class="comment">// let &#123;a,b,...n&#125; = &#123;a:1,b:2,c:3,d:4&#125;</span></span><br><span class="line"><span class="comment">// console.log(a,b,n)</span></span><br><span class="line"><span class="comment">// 复制对象</span></span><br><span class="line"><span class="comment">// let json1 = &#123;a:2,b:3&#125;</span></span><br><span class="line"><span class="comment">// let json2 = &#123;...json1&#125;;</span></span><br><span class="line"><span class="comment">// ------------------------------------------------</span></span><br><span class="line"><span class="comment">// Promise</span></span><br><span class="line"><span class="comment">// let getUserName = (num) =&gt; new Promise((resolve, reject) =&gt; &#123;</span></span><br><span class="line"><span class="comment">//     if (num &gt; 10) &#123;</span></span><br><span class="line"><span class="comment">//         reject('这里是reject')</span></span><br><span class="line"><span class="comment">//     &#125; else &#123;</span></span><br><span class="line"><span class="comment">//         resolve('这里是resolve')</span></span><br><span class="line"><span class="comment">//     &#125;</span></span><br><span class="line"><span class="comment">// &#125;)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// getUserName(1).then(res =&gt; &#123;</span></span><br><span class="line"><span class="comment">//     console.log(res)</span></span><br><span class="line"><span class="comment">//     return getUserName(3)</span></span><br><span class="line"><span class="comment">// &#125;, err =&gt; &#123;</span></span><br><span class="line"><span class="comment">//     //这里输出 reject的</span></span><br><span class="line"><span class="comment">// &#125;).catch(res =&gt; &#123;</span></span><br><span class="line"><span class="comment">//     // 这里也是错</span></span><br><span class="line"><span class="comment">// &#125;).then(res =&gt; &#123;</span></span><br><span class="line"><span class="comment">//     console.log(res)</span></span><br><span class="line"><span class="comment">// &#125;)</span></span><br><span class="line"><span class="comment">// Promise.all() 全部resolve</span></span><br><span class="line"><span class="comment">// Promise.race() 只有一个全部resolve</span></span><br><span class="line"><span class="comment">// =========================================================================================</span></span><br><span class="line"><span class="comment">// 模块化</span></span><br><span class="line"><span class="comment">// import </span></span><br><span class="line"><span class="comment">// export</span></span><br><span class="line"><span class="comment">// =========================================================================================</span></span><br><span class="line"><span class="comment">// Symbol</span></span><br><span class="line"><span class="comment">// generator 解决异步，一步步来</span></span><br><span class="line"><span class="comment">// function testSetData(name)&#123;</span></span><br><span class="line"><span class="comment">//     return Promise.resolve(name)</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"><span class="comment">// function * testGenerator()&#123;</span></span><br><span class="line"><span class="comment">//     yield testSetData('小米')</span></span><br><span class="line"><span class="comment">//     yield testSetData('小啦')</span></span><br><span class="line"><span class="comment">//     yield testSetData('小又')</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// // 这里赋值是有原因的</span></span><br><span class="line"><span class="comment">// let tg = testGenerator();</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// tg.next().value.then(res=&gt;&#123;</span></span><br><span class="line"><span class="comment">//     console.log(res)</span></span><br><span class="line"><span class="comment">//     return tg.next().value</span></span><br><span class="line"><span class="comment">// &#125;).then(res=&gt;&#123;</span></span><br><span class="line"><span class="comment">//     console.log(res)</span></span><br><span class="line"><span class="comment">//     return tg.next().value</span></span><br><span class="line"><span class="comment">// &#125;).then(res=&gt;&#123;</span></span><br><span class="line"><span class="comment">//     console.log(res)</span></span><br><span class="line"><span class="comment">// &#125;)</span></span><br><span class="line"><span class="comment">// ------------------------------------------------</span></span><br><span class="line"><span class="comment">// async await async是一个Promise对象 等等..简单使用如下</span></span><br><span class="line"><span class="comment">// let testAwait=(name)=&gt;&#123;</span></span><br><span class="line"><span class="comment">//     console.log(`$&#123;name&#125;====`)</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"><span class="comment">// async function testAsync()&#123;</span></span><br><span class="line"><span class="comment">//     await testAwait('lixc')</span></span><br><span class="line"><span class="comment">//     await testAwait('sdf')</span></span><br><span class="line"><span class="comment">//     await testAwait('gfgf')</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"><span class="comment">// testAsync()</span></span><br><span class="line"><span class="comment">// =========================================================================================</span></span><br><span class="line"><span class="comment">// Set 可去重 具有？对象方法 初始参数不可以为对象</span></span><br><span class="line"><span class="comment">// let arrSet = new Set([1,2,3,4,5,6,7,2,3,4,1])</span></span><br><span class="line"><span class="comment">// // add 方法添加值 可以添加对象</span></span><br><span class="line"><span class="comment">// arrSet.add('添加的东西')</span></span><br><span class="line"><span class="comment">// // delete 删除值</span></span><br><span class="line"><span class="comment">// arrSet.delete(1)</span></span><br><span class="line"><span class="comment">// // has 检测</span></span><br><span class="line"><span class="comment">// console.log(arrSet.has(2))</span></span><br><span class="line"><span class="comment">// // 属性</span></span><br><span class="line"><span class="comment">// console.log(arrSet.size)</span></span><br><span class="line"><span class="comment">// // 清除</span></span><br><span class="line"><span class="comment">// // arrSet.clear();</span></span><br><span class="line"><span class="comment">// console.log(Array.from(arrSet),[...arrSet])</span></span><br><span class="line"><span class="comment">// new WeakSet</span></span><br><span class="line"><span class="comment">// =========================================================================================</span></span><br><span class="line"><span class="comment">// Map key可以是任意类型</span></span><br><span class="line"><span class="comment">// let map = new Map()</span></span><br><span class="line"><span class="comment">// // set 添加</span></span><br><span class="line"><span class="comment">// let jso = &#123;a:1&#125;;</span></span><br><span class="line"><span class="comment">// map.set(jso,'saf')</span></span><br><span class="line"><span class="comment">// // get 获取</span></span><br><span class="line"><span class="comment">// console.log(map.get(jso))</span></span><br><span class="line"><span class="comment">// // delete 删除</span></span><br><span class="line"><span class="comment">// // 检测有无 has</span></span><br><span class="line"><span class="comment">// // clear 清空</span></span><br><span class="line"><span class="comment">// console.log(map)</span></span><br><span class="line"><span class="comment">// WeakMap key只能是对象</span></span><br><span class="line"><span class="comment">// =========================================================================================</span></span><br><span class="line"><span class="comment">// Math新增？</span></span><br><span class="line"><span class="comment">// 二进制(binary)</span></span><br><span class="line"><span class="comment">// let num = 0b10;</span></span><br><span class="line"><span class="comment">// console.log(num)</span></span><br><span class="line"><span class="comment">// 八进制（octal）</span></span><br><span class="line"><span class="comment">// let num = 0o123;</span></span><br><span class="line"><span class="comment">// console.log(num)</span></span><br><span class="line"><span class="comment">// ------------------------------------------------</span></span><br><span class="line"><span class="comment">// Number.isFinite() 是一个数字</span></span><br><span class="line"><span class="comment">// Number.isNaN() 是不是一个数字</span></span><br><span class="line"><span class="comment">// Number.isInteger() 是不是整数</span></span><br><span class="line"><span class="comment">// ------------------------------------------------</span></span><br><span class="line"><span class="comment">// 安全整数 -(2^53-1)到(2^53-1)</span></span><br><span class="line"><span class="comment">// console.log(Number.isSafeInteger(2**53-1))</span></span><br><span class="line"><span class="comment">// console.log(Number.MAX_SAFE_INTEGER)</span></span><br><span class="line"><span class="comment">// console.log(Number.MIN_SAFE_INTEGER)</span></span><br><span class="line"><span class="comment">// Math 截断</span></span><br><span class="line"><span class="comment">// console.log(Math.trunc(1.22222)) // 只保留整数部分</span></span><br><span class="line"><span class="comment">// 判断是正数还是负数 0</span></span><br><span class="line"><span class="comment">// console.log(Math.sign(-3))</span></span><br><span class="line"><span class="comment">// 立方根</span></span><br><span class="line"><span class="comment">// console.log(Math.cbrt(216)) //6</span></span><br><span class="line"><span class="comment">// ------------------------------------------------</span></span><br><span class="line"><span class="comment">// ES9新增</span></span><br><span class="line"><span class="comment">// 命名捕获</span></span><br><span class="line"><span class="comment">// let str = '2018-01-01'</span></span><br><span class="line"><span class="comment">// let reg = /(?&lt;y&gt;\d&#123;4&#125;)-(?&lt;m&gt;\d&#123;2&#125;)-(?&lt;d&gt;\d&#123;2&#125;)/;</span></span><br><span class="line"><span class="comment">// console.log(str.match(reg).groups)</span></span><br><span class="line"><span class="comment">// 反向捕获</span></span><br><span class="line"><span class="comment">// let reg = /^(?&lt;t&gt;test)-\k&lt;t&gt;$/;</span></span><br><span class="line"><span class="comment">// console.log(reg.test('test-test'))</span></span><br><span class="line"><span class="comment">// let reg = /^(?&lt;t&gt;test)-\k&lt;t&gt;-\1$/;</span></span><br><span class="line"><span class="comment">// console.log(reg.test('test-test-test'))</span></span><br><span class="line"><span class="comment">// 结合替换</span></span><br><span class="line"><span class="comment">// let str = '2018-01-01'</span></span><br><span class="line"><span class="comment">// let reg = /(?&lt;y&gt;\d&#123;4&#125;)-(?&lt;m&gt;\d&#123;2&#125;)-(?&lt;d&gt;\d&#123;2&#125;)/;</span></span><br><span class="line"><span class="comment">// console.log(str.replace(reg,'$&lt;y&gt;/$&lt;m&gt;/$&lt;d&gt;'))</span></span><br><span class="line"><span class="comment">// dotAll s</span></span><br><span class="line"><span class="comment">// let reg = /^\w+.\w+$/s;</span></span><br><span class="line"><span class="comment">// console.log(reg.test('test\nadf'))</span></span><br><span class="line"><span class="comment">// 标签函数</span></span><br><span class="line"><span class="comment">// function test(arg)&#123;</span></span><br><span class="line"><span class="comment">//     return arg[0]</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"><span class="comment">// console.log(test`说点什么吧`)</span></span><br><span class="line"><span class="comment">// =========================================================================================</span></span><br><span class="line"><span class="comment">// Proxy</span></span><br><span class="line"><span class="comment">// 语法 new Proxy(被代理的对象,对代理对象的操作&#123;</span></span><br><span class="line"><span class="comment">// set() 设置</span></span><br><span class="line"><span class="comment">// get() 获取</span></span><br><span class="line"><span class="comment">// deleteProperty() 删除</span></span><br><span class="line"><span class="comment">// has() 有没有</span></span><br><span class="line"><span class="comment">// apply() 调用函数处理</span></span><br><span class="line"><span class="comment">// &#125;)</span></span><br><span class="line"><span class="comment">// let json = &#123;</span></span><br><span class="line"><span class="comment">//     name:'张飞',</span></span><br><span class="line"><span class="comment">//     age:'40'</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"><span class="comment">// let newJson = new Proxy(json,&#123;</span></span><br><span class="line"><span class="comment">//     get(target,property)&#123;</span></span><br><span class="line"><span class="comment">//         if(property in target)&#123;</span></span><br><span class="line"><span class="comment">//             return target[property]+'被处理了'</span></span><br><span class="line"><span class="comment">//         &#125;else&#123;</span></span><br><span class="line"><span class="comment">//             throw new ReferenceError(`没有$&#123;property&#125;`)</span></span><br><span class="line"><span class="comment">//         &#125;</span></span><br><span class="line"><span class="comment">//     &#125;</span></span><br><span class="line"><span class="comment">// &#125;)</span></span><br><span class="line"><span class="comment">// console.log(newJson.name)</span></span><br><span class="line"><span class="comment">// console.log(newJson.like)</span></span><br><span class="line"><span class="comment">// const DOM = new Proxy(&#123;&#125;,&#123;</span></span><br><span class="line"><span class="comment">//     get(target,property)&#123;</span></span><br><span class="line"><span class="comment">//         return (attr=&#123;&#125;,...content)=&gt;&#123;</span></span><br><span class="line"><span class="comment">//             let el = document.createElement(property);</span></span><br><span class="line"><span class="comment">//             for(let i in attr)&#123;</span></span><br><span class="line"><span class="comment">//                 el.setAttribute(i,attr[i])</span></span><br><span class="line"><span class="comment">//             &#125;</span></span><br><span class="line"><span class="comment">//             for(let i in content)&#123;</span></span><br><span class="line"><span class="comment">//                 if(typeof content[i] === 'string')&#123;</span></span><br><span class="line"><span class="comment">//                     el.appendChild(document.createTextNode(content[i]))</span></span><br><span class="line"><span class="comment">//                 &#125;else&#123;</span></span><br><span class="line"><span class="comment">//                     el.appendChild(content[i])</span></span><br><span class="line"><span class="comment">//                 &#125;</span></span><br><span class="line"><span class="comment">//             &#125;</span></span><br><span class="line"><span class="comment">//             return el;</span></span><br><span class="line"><span class="comment">//         &#125;</span></span><br><span class="line"><span class="comment">//     &#125;</span></span><br><span class="line"><span class="comment">// &#125;)</span></span><br><span class="line"><span class="comment">// let doms = DOM.div(&#123;id:'div1',class:'div1'&#125;,'第一个DIV','附加',DOM.iframe(&#123;src:'https://www.baidu.com',width:100,height:400&#125;));</span></span><br><span class="line"><span class="comment">// window.onload = ()=&gt;&#123;</span></span><br><span class="line"><span class="comment">//     document.body.appendChild(doms)</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"><span class="comment">// ------------------------------------------------</span></span><br><span class="line"><span class="comment">// let testProxy = new Proxy(&#123;&#125;, &#123;</span></span><br><span class="line"><span class="comment">//     set(target, prop, value) &#123;</span></span><br><span class="line"><span class="comment">//         if (prop === 'age') &#123;</span></span><br><span class="line"><span class="comment">//             if (!Number.isInteger(value)) &#123;</span></span><br><span class="line"><span class="comment">//                 throw new TypeError('不行不行')</span></span><br><span class="line"><span class="comment">//             &#125;</span></span><br><span class="line"><span class="comment">//             if (value &gt; 60) &#123;</span></span><br><span class="line"><span class="comment">//                 throw new RangeError('不对不对')</span></span><br><span class="line"><span class="comment">//             &#125;</span></span><br><span class="line"><span class="comment">//             target[prop] = value;</span></span><br><span class="line"><span class="comment">//         &#125; else &#123;</span></span><br><span class="line"><span class="comment">//             target[prop] = value;</span></span><br><span class="line"><span class="comment">//         &#125;</span></span><br><span class="line"><span class="comment">//     &#125;,</span></span><br><span class="line"><span class="comment">//     deleteProperty(target,property)&#123;</span></span><br><span class="line"><span class="comment">//         if(property === 'name')&#123;</span></span><br><span class="line"><span class="comment">//             // throw new Error('姓名不能删除')</span></span><br><span class="line"><span class="comment">//             console.warn('姓名不能删除')</span></span><br><span class="line"><span class="comment">//         &#125;else&#123;</span></span><br><span class="line"><span class="comment">//             delete target[property]</span></span><br><span class="line"><span class="comment">//         &#125;</span></span><br><span class="line"><span class="comment">//     &#125;,</span></span><br><span class="line"><span class="comment">//     has(target,property)&#123;</span></span><br><span class="line"><span class="comment">//         console.error(`没有$&#123;property&#125;`)</span></span><br><span class="line"><span class="comment">//         return property in target;</span></span><br><span class="line"><span class="comment">//     &#125;</span></span><br><span class="line"><span class="comment">// &#125;)</span></span><br><span class="line"><span class="comment">// testProxy.age = 40</span></span><br><span class="line"><span class="comment">// testProxy.name = '说点什么吧'</span></span><br><span class="line"><span class="comment">// delete testProxy.name</span></span><br><span class="line"><span class="comment">// delete testProxy.age</span></span><br><span class="line"><span class="comment">// console.log('tel' in testProxy)</span></span><br><span class="line"><span class="comment">// console.log(testProxy)</span></span><br><span class="line"><span class="comment">// ------------------------------------------------</span></span><br><span class="line"><span class="comment">// Reflect 反射</span></span><br><span class="line"><span class="comment">// let fnProxy = (text,t2,t3) =&gt; &#123;</span></span><br><span class="line"><span class="comment">//     console.log(`这里是 fnProxy$&#123;text&#125;$&#123;t2&#125; $&#123;t3&#125;`)</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"><span class="comment">// let newFnProxy = new Proxy(fnProxy,&#123;</span></span><br><span class="line"><span class="comment">//     apply(target,context,args)&#123;</span></span><br><span class="line"><span class="comment">//         // 这里是 arguments </span></span><br><span class="line"><span class="comment">//         return Reflect.apply(...arguments)</span></span><br><span class="line"><span class="comment">//     &#125;</span></span><br><span class="line"><span class="comment">// &#125;)</span></span><br><span class="line"><span class="comment">// newFnProxy('我认得你','留香')</span></span><br><span class="line"><span class="comment">// ------------------------------------------------</span></span><br><span class="line"><span class="comment">// let res = Reflect.apply(Math.ceil,null,[5.5])</span></span><br><span class="line"><span class="comment">// console.log(res)</span></span><br><span class="line"><span class="comment">// let show = function(...args)&#123;</span></span><br><span class="line"><span class="comment">//     console.log(this)</span></span><br><span class="line"><span class="comment">//     console.log(args)</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"><span class="comment">// show.call('1',1,23,23,234)</span></span><br><span class="line"><span class="comment">// show.apply('1',[1,23,23,234])</span></span><br><span class="line"><span class="comment">// Reflect.apply(show,'fd',[5.5,4,5])</span></span><br><span class="line"><span class="comment">// console.log('isNaN' in Number,Reflect.has(Number,'isNaN'))</span></span><br><span class="line"><span class="comment">// =========================================================================================</span></span><br><span class="line"><span class="comment">// for of</span></span><br><span class="line"><span class="comment">// let arr = ['99999',2,3,4,5,6,7,8,9,10]</span></span><br><span class="line"><span class="comment">// for(let i of arr)&#123;</span></span><br><span class="line"><span class="comment">//     //输出的为数组的值，而不是下标</span></span><br><span class="line"><span class="comment">//     console.log(i)</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"><span class="comment">// =========================================================================================</span></span><br><span class="line"><span class="comment">// Class 继承</span></span><br><span class="line"><span class="comment">// function cat(name, like) &#123;</span></span><br><span class="line"><span class="comment">//     this.name = name;</span></span><br><span class="line"><span class="comment">//     this.like = like;</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"><span class="comment">// cat.prototype.sayName = function () &#123;</span></span><br><span class="line"><span class="comment">//     console.log('被调用了')</span></span><br><span class="line"><span class="comment">//     return `这里是第一种继承的输出$&#123;this.name&#125;,$&#123;this.like&#125;`</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Object.assign(cat.prototype, &#123;</span></span><br><span class="line"><span class="comment">//     sayLike() &#123;</span></span><br><span class="line"><span class="comment">//         console.log('被调用了')</span></span><br><span class="line"><span class="comment">//         return `这里是第二种继承的输出$&#123;this.name&#125;,$&#123;this.like&#125;`</span></span><br><span class="line"><span class="comment">//     &#125;</span></span><br><span class="line"><span class="comment">// &#125;)</span></span><br><span class="line"><span class="comment">// let xiaohua = new cat('小花', '樱桃');</span></span><br><span class="line"><span class="comment">// console.log(xiaohua.sayName())</span></span><br><span class="line"><span class="comment">// console.log(xiaohua.sayLike())</span></span><br><span class="line"><span class="comment">// function Ding(name, like) &#123;</span></span><br><span class="line"><span class="comment">//     cat.call(this, name)</span></span><br><span class="line"><span class="comment">//     this.like = like;</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"><span class="comment">// Ding.prototype = new cat()</span></span><br><span class="line"><span class="comment">// let d = new Ding('丁丁', '鱿鱼');</span></span><br><span class="line"><span class="comment">// console.log(d.sayName())</span></span><br><span class="line"><span class="comment">// console.log(d.sayLike())</span></span><br><span class="line"><span class="comment">// class Dog extends cat &#123;</span></span><br><span class="line"><span class="comment">//     constructor(name, like, age = 12) &#123;</span></span><br><span class="line"><span class="comment">//         super(name, like);</span></span><br><span class="line"><span class="comment">//         this.age = age;</span></span><br><span class="line"><span class="comment">//     &#125;</span></span><br><span class="line"><span class="comment">//     sayName() &#123;</span></span><br><span class="line"><span class="comment">//         super.sayName()</span></span><br><span class="line"><span class="comment">//         console.log(`这条小狗的名字叫：$&#123;this.name&#125;`)</span></span><br><span class="line"><span class="comment">//     &#125;</span></span><br><span class="line"><span class="comment">//     sayLike() &#123;</span></span><br><span class="line"><span class="comment">//         super.sayLike()</span></span><br><span class="line"><span class="comment">//         console.log(`这条小狗喜欢：$&#123;this.like&#125;`)</span></span><br><span class="line"><span class="comment">//     &#125;</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"><span class="comment">// let xiaoli = new Dog('小丽', '花生')</span></span><br><span class="line"><span class="comment">// xiaoli.sayName()</span></span><br><span class="line"><span class="comment">// xiaoli.sayLike()</span></span><br><span class="line"><span class="comment">// =========================================================================================</span></span><br><span class="line"><span class="comment">// JavaScript中的错误类型</span></span><br><span class="line"><span class="comment">// EvalError - Eval错误</span></span><br><span class="line"><span class="comment">// ReferenceError - 引用错误</span></span><br><span class="line"><span class="comment">// RangeError - 范围错误</span></span><br><span class="line"><span class="comment">// SyntaxError - 语法错误</span></span><br><span class="line"><span class="comment">// TypeError - 类型错误</span></span><br><span class="line"><span class="comment">// URIError - URI错误</span></span><br></pre></td></tr></table></figure><h3 id="End"><a href="#End" class="headerlink" title="End"></a>End</h3>]]></content>
      
      
        <tags>
            
            <tag> 代码 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Truffle框架</title>
      <link href="/2018/02/21/Truffle%E6%A1%86%E6%9E%B6/"/>
      <url>/2018/02/21/Truffle%E6%A1%86%E6%9E%B6/</url>
      <content type="html"><![CDATA[<p><a href="http://truffleframework.com/" target="_blank" rel="noopener">truffleframework官网</a></p><p>安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g truffle</span><br></pre></td></tr></table></figure><p>新建web项目</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">truffle unbox webpack</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">truffle develop</span><br></pre></td></tr></table></figure><p>随后当前在终端中输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">compile</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">migrate</span><br></pre></td></tr></table></figure><p>不关闭当前终端,新建终端窗口</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">// Serves the front-end on http://localhost:8080</span><br><span class="line">npm run dev</span><br></pre></td></tr></table></figure><p>原文地址:<a href="http://truffleframework.com/boxes/webpack" target="_blank" rel="noopener">http://truffleframework.com/boxes/webpack</a></p><p>更多方式:<a href="http://truffleframework.com/boxes/" target="_blank" rel="noopener">http://truffleframework.com/boxes/</a></p>]]></content>
      
      
        <tags>
            
            <tag> 代码 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>ubuntu卸载mysql</title>
      <link href="/2018/02/21/ubuntu%E5%8D%B8%E8%BD%BDmysql/"/>
      <url>/2018/02/21/ubuntu%E5%8D%B8%E8%BD%BDmysql/</url>
      <content type="html"><![CDATA[<p><code>sudo apt purge mysql-*</code></p><p><code>sudo rm -rf /etc/mysql/ /var/lib/mysql</code></p><p><code>sudo apt autoremove</code></p><p><code>sudo apt autoreclean</code></p>]]></content>
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>mac权限问题</title>
      <link href="/2018/02/21/mac%E6%9D%83%E9%99%90%E9%97%AE%E9%A2%98/"/>
      <url>/2018/02/21/mac%E6%9D%83%E9%99%90%E9%97%AE%E9%A2%98/</url>
      <content type="html"><![CDATA[<p>mac使用npm安装模块前添加<code>sudo</code>后再次使用这些模块创建项目的时候用户会获取不到权限导致不能编辑,同时终端也会报错并且会带一个路径.<br>对没有权限的路径使用如下方法进行解决</p><p><code>sudo chown -R $USER /目录</code></p>]]></content>
      
      
        <tags>
            
            <tag> 权限 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>nginx 添加stream模块</title>
      <link href="/2018/02/21/nginx-%E6%B7%BB%E5%8A%A0stream%E6%A8%A1%E5%9D%97/"/>
      <url>/2018/02/21/nginx-%E6%B7%BB%E5%8A%A0stream%E6%A8%A1%E5%9D%97/</url>
      <content type="html"><![CDATA[<p>mac 中添加nginx stream模块,使用brew安装</p><p>1、<code>brew tap homebrew/nginx</code><br>2、<code>brew unlink nginx</code>[已经安装了nginx]<br>3、<code>brew install nginx-full --with-upload-module</code><br>4、<code>brew link nginx-full</code></p><p>linux 添加nginx stream模块</p><p>1、<code>wget http://nginx.org/download/nginx-1.12.2.tar.gz</code><br>2、<code>tar  -zxvf nginx-1.12.2.tar.gz</code><br>3、<code>./configure  --prefix=/usr/local/nginx --with-stream</code><br>4、<code>make</code><br>5、<code>make install</code></p><p>已经安装了Nginx需要 nginx -V 查看目前已经安装的插件，在添加新插件需要添加已经安装的插件参数</p><p>ngx_stream_core_module:<a href="http://nginx.org/en/docs/stream/ngx_stream_core_module.html" target="_blank" rel="noopener">http://nginx.org/en/docs/stream/ngx_stream_core_module.html</a></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">stream &#123;</span><br><span class="line">    upstream backend &#123;</span><br><span class="line">        server <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">8080</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    server &#123;</span><br><span class="line">        listen <span class="number">30001</span>;</span><br><span class="line">        proxy_pass backend;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> 运行维护 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>学习react native记录</title>
      <link href="/2018/02/21/%E5%AD%A6%E4%B9%A0react-native%E8%AE%B0%E5%BD%95/"/>
      <url>/2018/02/21/%E5%AD%A6%E4%B9%A0react-native%E8%AE%B0%E5%BD%95/</url>
      <content type="html"><![CDATA[<p><a href="https://www.decoide.org/docs/getting-started" target="_blank" rel="noopener">Deco</a></p><p>搭建开发环境直接在官网照着教程来.</p><p>react native45版本开始后，新建应用会抛出UNpackage xxxx错误，原因是最新的RN无法下载到4个tar.gz文件，由于被墙的原因，所以要手动去下载，下载好后把下载好的四个文件放到路径：/Users/xxx/.rncache/下面，这四个文件的下载路径分别是：<br>1、<a href="https://codeload.github.com/facebook/folly/tar.gz/v2016.09.26.00/" target="_blank" rel="noopener">folly</a><br>2、<a href="https://codeload.github.com/google/double-conversion/tar.gz/v1.1.5/" target="_blank" rel="noopener">double-conversion</a><br>3、<a href="https://codeload.github.com/google/glog/tar.gz/v0.3.4/" target="_blank" rel="noopener">glog</a><br>4、<a href="https://github.com/react-native-community/boost-for-react-native/releases/download/v1.63.0-0/boost_1_63_0.tar.gz/" target="_blank" rel="noopener">boost</a></p><p>项目可以在模拟器中运行后</p><p>调试 <code>cmd+D</code></p><p>重新加载 <code>cmd+R</code></p><p> <a href="https://reactnavigation.org" target="_blank" rel="noopener">reactnavigation</a>这个</p><p>未完……</p>]]></content>
      
      
        <tags>
            
            <tag> 代码 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>学习onsen ui 记录</title>
      <link href="/2018/02/21/%E5%AD%A6%E4%B9%A0onsen-ui-%E8%AE%B0%E5%BD%95/"/>
      <url>/2018/02/21/%E5%AD%A6%E4%B9%A0onsen-ui-%E8%AE%B0%E5%BD%95/</url>
      <content type="html"><![CDATA[<p>新建一个Cordova项目,使用Cordova命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cordova create ‘project name’ //下文中的项目名称均为“pet”</span><br></pre></td></tr></table></figure><p>还没安装cordova请在有node环境的前提下在控制台输入执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g cordova</span><br></pre></td></tr></table></figure><p>进入<strong>pet</strong>目录下 在控制台/终端下输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vue init webpack</span><br></pre></td></tr></table></figure><p>根据提示配置好需要的插件</p><p>在使用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm run build</span><br></pre></td></tr></table></figure><p>命令前需要修改</p><p>pet/config/index.js中的build的输出路径将其修改为</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">index: path.resolve(__dirname, <span class="string">'../www/index.html'</span>),</span><br><span class="line">assetsRoot: path.resolve(__dirname, <span class="string">'../www'</span>),</span><br><span class="line">assetsSubDirectory: <span class="string">'static'</span>,</span><br><span class="line">assetsPublicPath: <span class="string">''</span>,</span><br></pre></td></tr></table></figure><p>这样执行build后打包后的文件就到了www目录下也就是cordova项目放html文件的目录</p><p>随后安装OnsenUI <a href="https://onsen.io/v2/guide/vue/#vue-js" target="_blank" rel="noopener">OnsenUI官网</a></p><p>官网提供了Cordova项目的模板需要的可以在官网下载,我用的普通模板</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install onsenui vue-onsenui --save-dev</span><br></pre></td></tr></table></figure><p>随后复制OnsenUI提供的Vue组件 <a href="https://onsen.io/v2/api/vue/" target="_blank" rel="noopener">OnsenUI Vue Components</a></p><p>放到App.vue中</p><p>随后对Cordova添加需要的platform</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cordova platform add browser</span><br><span class="line">cordova platform add ios</span><br><span class="line">cordova platform add android</span><br></pre></td></tr></table></figure><p>为了方便我在package.json文件中scripts下添加了三条</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"scripts"</span>: &#123;</span><br><span class="line">    <span class="string">"cordova-ios"</span>: <span class="string">"cordova build ios"</span>,</span><br><span class="line">    <span class="string">"cordova-android"</span>: <span class="string">"cordova build android"</span>,</span><br><span class="line">    <span class="string">"build-all"</span>: <span class="string">"cordova build ios &amp;&amp; cordova build android"</span></span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p>在IOS平台需要对iPhoneX及iPhone的statusbar进行兼容,其实就是空出上面和下面的空间,Onsen提供了一些方法<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ons.enableAutoStatusBarFill()</span><br><span class="line"><span class="comment">//Enable status bar fill feature on iOS7 and above (except for iPhone X). Must be called before $ons.ready.</span></span><br><span class="line">$ons.disableAutoStatusBarFill()</span><br><span class="line"><span class="comment">//Disable status bar fill feature on iOS7 and above (except for iPhone X). Must be called before $ons.ready.</span></span><br></pre></td></tr></table></figure></p><p>使用后并没发现有什么改变</p><p>反而</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ons.mockStatusBar()</span><br><span class="line"><span class="comment">//Creates a static component similar to iOS status bar. Only useful for browser testing. Must be called before $ons.ready.</span></span><br></pre></td></tr></table></figure><p>这段代码有效果 </p><p>使用$ons前需要import进来</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> $ons <span class="keyword">from</span> <span class="string">'vue-onsenui/esm'</span></span><br></pre></td></tr></table></figure><p>使用OnsenUI提供的方法兼容iPhoneX</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> ($ons.platform.isIPhoneX()) &#123;</span><br><span class="line">    <span class="built_in">document</span>.documentElement.setAttribute(<span class="string">'onsflag-iphonex-portrait'</span>, <span class="string">''</span>);</span><br><span class="line">    <span class="built_in">document</span>.documentElement.setAttribute(<span class="string">'onsflag-iphonex-landscape'</span>, <span class="string">''</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>普通的iPhone兼容statusbar</p><p>找到了onsenui/css/onsen-css-components.css文件</p><p>修改了一下,修改如下</p><p>在7549行@media (orientation: portrait)下</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">html[onsflag-iphone-portrait] .toolbar &#123;</span><br><span class="line">    top: <span class="number">0</span>;</span><br><span class="line">    box-sizing: content-box;</span><br><span class="line">    padding-top: <span class="number">20</span>px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">html[onsflag-iphone-portrait] .page__content &#123;</span><br><span class="line">    top: <span class="number">0</span>;</span><br><span class="line">    padding-top: <span class="number">20</span>px;</span><br><span class="line">    bottom: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">html[onsflag-iphone-portrait] .dialog .toolbar:not(.toolbar--cover-content) + .page__background,</span><br><span class="line">html[onsflag-iphone-portrait] .dialog .toolbar:not(.toolbar--cover-content) + .page__background + .page__content, <span class="comment">/* if wrapped with dialogs */</span></span><br><span class="line"></span><br><span class="line">html[onsflag-iphone-portrait] .modal .toolbar:not(.toolbar--cover-content) + .page__background,</span><br><span class="line">html[onsflag-iphone-portrait] .modal .toolbar:not(.toolbar--cover-content) + .page__background + .page__content, <span class="comment">/* if wrapped with modals */</span></span><br><span class="line"></span><br><span class="line">html[onsflag-iphone-portrait] .toolbar:not(.toolbar--cover-content) + .page__background + .page__content .toolbar:not(.toolbar--cover-content) + .page__background,</span><br><span class="line">html[onsflag-iphone-portrait] .toolbar:not(.toolbar--cover-content) + .page__background + .page__content .toolbar:not(.toolbar--cover-content) + .page__background + .page__content, <span class="comment">/* if wrapped with a page with a toolbar */</span></span><br><span class="line"></span><br><span class="line">html[onsflag-iphone-portrait] .tabbar--top__content .toolbar:not(.toolbar--cover-content) + .page__background,</span><br><span class="line">html[onsflag-iphone-portrait] .tabbar--top__content .toolbar:not(.toolbar--cover-content) + .page__background + .page__content &#123; <span class="comment">/* if wrapped with a top tabbar */</span></span><br><span class="line">    <span class="comment">/* Restore original styles */</span></span><br><span class="line">    top: <span class="number">20</span>px;</span><br><span class="line">    padding-top: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">html[onsflag-iphone-portrait] .dialog .toolbar.toolbar--transparent.toolbar--cover-content + .page__background + .page__content, <span class="comment">/* if wrapped with dialogs */</span></span><br><span class="line">html[onsflag-iphone-portrait] .dialog .toolbar.toolbar--transparent.toolbar--cover-content + .page__background + .page__content .page_content,</span><br><span class="line">html[onsflag-iphone-portrait] .modal .toolbar.toolbar--transparent.toolbar--cover-content + .page__background + .page__content, <span class="comment">/* if wrapped with modals */</span></span><br><span class="line">html[onsflag-iphone-portrait] .modal .toolbar.toolbar--transparent.toolbar--cover-content + .page__background + .page__content .page_content,</span><br><span class="line">html[onsflag-iphone-portrait] .toolbar:not(.toolbar--cover-content) + .page__background + .page__content .toolbar.toolbar--transparent.toolbar--cover-content + .page__background + .page__content, <span class="comment">/* if wrapped with a page with a toolbar */</span></span><br><span class="line">html[onsflag-iphone-portrait] .toolbar:not(.toolbar--cover-content) + .page__background + .page__content .toolbar.toolbar--transparent.toolbar--cover-content + .page__background + .page__content .page__content,</span><br><span class="line">html[onsflag-iphone-portrait] .tabbar--top__content .toolbar.toolbar--transparent.toolbar--cover-content + .page__background + .page__content,</span><br><span class="line">html[onsflag-iphone-portrait] .tabbar--top__content .toolbar.toolbar--transparent.toolbar--cover-content + .page__background + .page__content .page_content &#123; <span class="comment">/* if wrapped with a top tabbar */</span></span><br><span class="line">    <span class="comment">/* Restore original styles */</span></span><br><span class="line">    top: <span class="number">0</span>;</span><br><span class="line">    padding-top: <span class="number">20</span>px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">html[onsflag-iphone-portrait] .dialog .tabbar--top, <span class="comment">/* if wrapped with dialogs */</span></span><br><span class="line">html[onsflag-iphone-portrait] .modal .tabbar--top, <span class="comment">/* if wrapped with modals */</span></span><br><span class="line">html[onsflag-iphone-portrait] .toolbar:not(.toolbar--cover-content) + .page__background + .page__content .tabbar--top, <span class="comment">/* if wrapped with a page with a toolbar */</span></span><br><span class="line">html[onsflag-iphone-portrait] .tabbar--top__content .tabbar--top &#123; <span class="comment">/* if wrapped with a top tabbar */</span></span><br><span class="line">    <span class="comment">/* Restore original styles */</span></span><br><span class="line">    padding-top: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">html[onsflag-iphone-portrait] .tabbar--top__content &#123;</span><br><span class="line">    top: <span class="number">69</span>px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">html[onsflag-iphone-portrait] .dialog .tabbar--top__content, <span class="comment">/* if wrapped with dialogs */</span></span><br><span class="line">html[onsflag-iphone-portrait] .modal .tabbar--top__content, <span class="comment">/* if wrapped with modals */</span></span><br><span class="line">html[onsflag-iphone-portrait] .toolbar:not(.toolbar--cover-content) + .page__background + .page__content .tabbar--top__content, <span class="comment">/* if wrapped with a page with a toolbar */</span></span><br><span class="line">html[onsflag-iphone-portrait] .tabbar--top__content .tabbar--top__content &#123; <span class="comment">/* if wrapped with a top tabbar */</span></span><br><span class="line">    <span class="comment">/* Restore original styles */</span></span><br><span class="line">    top: <span class="number">25</span>px;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>随后在添加判断</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> ($ons.platform.isIPhone())</span><br><span class="line">    <span class="built_in">document</span>.documentElement.setAttribute(<span class="string">'onsflag-iphone-portrait'</span>, <span class="string">''</span>);</span><br></pre></td></tr></table></figure><p>使用模拟器及真机打开并为发现什么异常</p><p>使用webpack打包时发现饮用的字体都未生效最后在webpack配置webpack.base.conf.js添加</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    test: <span class="regexp">/\.(woff2?|eot|ttf|otf)(\?.*)?$/</span>,</span><br><span class="line">    loader: <span class="string">'url-loader'</span>,</span><br><span class="line">    options: &#123;</span><br><span class="line">        limit: <span class="number">10000</span>,</span><br><span class="line">        name: utils.assetsPath(<span class="string">'fonts/[name].[hash:7].[ext]'</span>),</span><br><span class="line">        <span class="comment">// 这句</span></span><br><span class="line">        publicPath: process.env.NODE_ENV === <span class="string">'production'</span> ? <span class="string">'../../'</span> : <span class="string">'/'</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>未完…</p>]]></content>
      
      
        <tags>
            
            <tag> 代码 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>使用Hexo+github搭建你的静态博客</title>
      <link href="/2018/01/11/hello-world/"/>
      <url>/2018/01/11/hello-world/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>每次部署的步骤，可按以下三步来进行。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
    </entry>
    
  
  
</search>
